set cut_paste_input [stack 0]
version 13.1 v5
push 0
push $cut_paste_input
Group {
 inputs 2
 name Blun
 selected true
 xpos -129
 ypos -114
 addUserKnob {20 User}
 addUserKnob {7 sizeb R 1 10}
 sizeb 1.9
 addUserKnob {41 iteration T Control.iteration}
 addUserKnob {22 Go -STARTLINE T "def get_int_from_array_knob(knob):\n    \"\"\"Converte il valore di un knob array in intero.\n\n    Args:\n        knob: Un oggetto `Array_Knob`.\n\n    Returns:\n        Il valore intero del knob array.\n    \"\"\"\n\n    value = knob.getValue()\n    if isinstance(value, (list, tuple)):\n        # Prendi il primo valore dell'array\n        value = value\[0]\n\n    # Converti il valore in intero\n    value = int(value)\n\n    return value\n\nnode = nuke.toNode('Blun.Control')\nsize = get_int_from_array_knob(node\[\"iteration\"])\nprint(size)\n\nwith nuke.toNode('Blun'):\n    \n    x = nuke.toNode('Blun.Inputsrc')\n    y = nuke.toNode('Blun.Inputroto')\n    ms = nuke.createNode(\"Merge2\", inpanel=False)\n    ms.knob('operation').setValue('stencil')\n    ms.setInput(0, x)\n    ms.setInput(1, y)\n\n    for i in range(size):\n        # creo un dot per collegarli\n        dot = nuke.createNode(\"Dot\", inpanel=False)\n        \n        # riempimento\n        b = nuke.createNode(\"Blur\",inpanel=False)\n        u = nuke.createNode(\"Unpremult\",inpanel=False)\n        b.knob('size').setExpression('sizeb')\n\n        # merge under del riempimento\n        mergeU = nuke.createNode(\"Merge2\",inpanel=False)\n        mergeU.knob('operation').setValue('under')\n        mergeU.setInput(0, dot)\n        mergeU.setInput(1, u)\n        \n        # setto il nuovo alpha\n        gradeA = nuke.createNode(\"Grade\",inpanel=False)\n        gradeA.setInput(0, u)\n        gradeA.knob('whitepoint').setValue(0)\n        \n        # copy nuovo alfa\n        k = nuke.createNode('Copy',inpanel=False)\n        k.knob('from0').setValue('rgba.green')\n        k.setInput(0, mergeU)\n        k.setInput(1, gradeA)\n        \n    final = nuke.createNode(\"Dot\",inpanel=False)\n    final.knob('name').setValue('Fine')\n    bf = nuke.toNode('Blur1')\n    ir = nuke.toNode('Inputroto')\n    bf.setInput(0,final)\n    bf.setInput(1,ir)\n    "}
 addUserKnob {41 size T Blur1.size}
}
 NoOp {
  inputs 0
  name Control
  xpos 83
  ypos -1189
  addUserKnob {20 User}
  addUserKnob {3 iteration}
  iteration 6
  addUserKnob {22 Ripetizioni l Go T "def get_int_from_array_knob(knob):\n    \"\"\"Converte il valore di un knob array in intero.\n\n    Args:\n        knob: Un oggetto `Array_Knob`.\n\n    Returns:\n        Il valore intero del knob array.\n    \"\"\"\n\n    value = knob.getValue()\n    if isinstance(value, (list, tuple)):\n        # Prendi il primo valore dell'array\n        value = value\[0]\n\n    # Converti il valore in intero\n    value = int(value)\n\n    return value\n\n#node = nuke.selectedNode()\n#size = get_int_from_array_knob(nuke.toNode('Control')\[\"integer\"])\nnode = nuke.selectedNode()\nsize = get_int_from_array_knob(node\[\"iteration\"])\nprint(size)\n\nfor i in range(size):\n    #creo un dot per collegarli\n    dot=nuke.createNode(\"Dot\", inpanel=False)\n    \n    #riempimento\n    b=nuke.createNode(\"Blur\")\n    u=nuke.createNode(\"Unpremult\")\n    \n    #merge under del riempimento\n    mergeU=nuke.createNode(\"Merge2\")\n    mergeU.knob('operation').setValue('under')\n    mergeU.setInput(0, dot)\n    mergeU.setInput(1, u)\n    \n    #setto il nuovo alpha\n    gradeA=nuke.createNode(\"Grade\")\n    gradeA.setInput(0,u)\n    gradeA.knob('whitepoint').setValue(0)\n    \n    #copy nuovo alha\n    k=nuke.createNode('Copy')\n    k.knob('from0').setValue('rgba.green')\n    k.setInput(0, mergeU)\n    k.setInput(1, gradeA)" +STARTLINE}
 }
 Input {
  inputs 0
  name Inputroto
  xpos -611
  ypos -397
  number 1
 }
set N166b20a0 [stack 0]
push $N166b20a0
 Input {
  inputs 0
  name Inputsrc
  xpos 65
  ypos -651
 }
 Merge2 {
  inputs 2
  operation stencil
  name Merge1
  selected true
  xpos 65
  ypos -397
 }
 Dot {
  name Dot1
  selected true
  xpos 99
  ypos -371
 }
set N54af0100 [stack 0]
 Blur {
  size {{sizeb}}
  name Blur2
  selected true
  xpos 65
  ypos -353
 }
 Unpremult {
  name Unpremult1
  selected true
  xpos 65
  ypos -315
 }
set N54ef3f30 [stack 0]
 Grade {
  whitepoint 0
  name Grade1
  selected true
  xpos 65
  ypos -287
 }
push $N54ef3f30
push $N54af0100
 Merge2 {
  inputs 2
  operation under
  name Merge2
  selected true
  xpos 175
  ypos -319
 }
 Copy {
  inputs 2
  from0 rgba.green
  to0 rgba.alpha
  name Copy1
  selected true
  xpos 175
  ypos -293
 }
 Dot {
  name Dot2
  selected true
  xpos 209
  ypos -255
 }
set N54ff5f60 [stack 0]
 Blur {
  size {{sizeb}}
  name Blur3
  selected true
  xpos 175
  ypos -237
 }
 Unpremult {
  name Unpremult2
  selected true
  xpos 175
  ypos -199
 }
set N554f9770 [stack 0]
 Grade {
  whitepoint 0
  name Grade2
  selected true
  xpos 175
  ypos -171
 }
push $N554f9770
push $N54ff5f60
 Merge2 {
  inputs 2
  operation under
  name Merge3
  selected true
  xpos 285
  ypos -203
 }
 Copy {
  inputs 2
  from0 rgba.green
  to0 rgba.alpha
  name Copy2
  selected true
  xpos 285
  ypos -177
 }
 Dot {
  name Dot3
  selected true
  xpos 319
  ypos -139
 }
set N551ff630 [stack 0]
 Blur {
  size {{sizeb}}
  name Blur4
  selected true
  xpos 285
  ypos -121
 }
 Unpremult {
  name Unpremult3
  selected true
  xpos 285
  ypos -83
 }
set N554f3e30 [stack 0]
 Grade {
  whitepoint 0
  name Grade3
  selected true
  xpos 285
  ypos -55
 }
push $N554f3e30
push $N551ff630
 Merge2 {
  inputs 2
  operation under
  name Merge4
  selected true
  xpos 395
  ypos -87
 }
 Copy {
  inputs 2
  from0 rgba.green
  to0 rgba.alpha
  name Copy3
  selected true
  xpos 395
  ypos -61
 }
 Dot {
  name Dot4
  selected true
  xpos 429
  ypos -23
 }
set N552f5fb0 [stack 0]
 Blur {
  size {{sizeb}}
  name Blur5
  selected true
  xpos 395
  ypos -5
 }
 Unpremult {
  name Unpremult4
  selected true
  xpos 395
  ypos 33
 }
set N553fa620 [stack 0]
 Grade {
  whitepoint 0
  name Grade4
  selected true
  xpos 395
  ypos 61
 }
push $N553fa620
push $N552f5fb0
 Merge2 {
  inputs 2
  operation under
  name Merge5
  selected true
  xpos 505
  ypos 29
 }
 Copy {
  inputs 2
  from0 rgba.green
  to0 rgba.alpha
  name Copy4
  selected true
  xpos 505
  ypos 55
 }
 Dot {
  name Dot5
  selected true
  xpos 539
  ypos 93
 }
set N556f7cd0 [stack 0]
 Blur {
  size {{sizeb}}
  name Blur6
  selected true
  xpos 505
  ypos 111
 }
 Unpremult {
  name Unpremult5
  selected true
  xpos 505
  ypos 149
 }
set N55ffded0 [stack 0]
 Grade {
  whitepoint 0
  name Grade5
  selected true
  xpos 505
  ypos 177
 }
push $N55ffded0
push $N556f7cd0
 Merge2 {
  inputs 2
  operation under
  name Merge6
  selected true
  xpos 615
  ypos 145
 }
 Copy {
  inputs 2
  from0 rgba.green
  to0 rgba.alpha
  name Copy5
  selected true
  xpos 615
  ypos 171
 }
 Dot {
  name Dot6
  selected true
  xpos 649
  ypos 209
 }
set N555f1dc0 [stack 0]
 Blur {
  size {{sizeb}}
  name Blur7
  selected true
  xpos 615
  ypos 227
 }
 Unpremult {
  name Unpremult6
  selected true
  xpos 615
  ypos 265
 }
set N55bf8780 [stack 0]
 Grade {
  whitepoint 0
  name Grade6
  selected true
  xpos 615
  ypos 293
 }
push $N55bf8780
push $N555f1dc0
 Merge2 {
  inputs 2
  operation under
  name Merge7
  selected true
  xpos 725
  ypos 261
 }
 Copy {
  inputs 2
  from0 rgba.green
  to0 rgba.alpha
  name Copy6
  selected true
  xpos 725
  ypos 287
 }
 Dot {
  name Fine
  selected true
  xpos 759
  ypos 325
 }
 Blur {
  inputs 1+1
  size 4.6
  name Blur1
  xpos 14
  ypos 2206
 }
 Output {
  name Output1
  xpos 14
  ypos 2654
 }
end_group
